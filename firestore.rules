rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Hilfsfunktion: Überprüfen, ob Benutzer authentifiziert ist
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Überprüfen, ob der Benutzer der Owner der Liste ist
    function isListOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Überprüfen, ob der Benutzer Mitglied der Liste ist (Owner oder geteilter Benutzer)
    function isListMember(userId) {
      return isListOwner(userId) || 
             (resource != null && resource.data.sharedWith != null && request.auth.uid in resource.data.sharedWith);
    }

    // Regeln für Benutzerprofile
    match /users/{userId} {
      allow read, write: if isAuthenticated();
    }

    // Regeln für Benutzereinstellungen
    match /userSettings/{userId} {
      allow read, write: if isAuthenticated();
    }

    // Regeln für Listen
    match /lists/{userId} {
      
      // Zugriff auf die Root-Liste erlauben, aber beschränken auf authentifizierte Benutzer
      allow read, write: if isAuthenticated();
      
      // Regeln für die eigenen Listen des Benutzers
      match /userLists/{listId} {
        // Vollzugriff für den Owner, Zugriff für geteilte Benutzer nur auf vorhandene Listen
        allow read, create, update, delete: if isAuthenticated() && isListMember(userId);
      }
      
      // Regeln für geteilte Listen
      match /sharedLists/{sharedListId} {
        // Erlaubt das Erstellen, auch wenn der Benutzer noch nicht in `sharedWith` ist (Initiales Teilen)
        allow create: if isAuthenticated();
        
        // Zugriff auf Lesen, Aktualisieren und Löschen für den Owner und geteilte Benutzer
        allow read, update, delete: if isAuthenticated() && isListMember(userId);
      }
    }

    // Regeln für die Begrenzung von Teilen
    match /rateLimit/{userId} {
      allow read, write: if isAuthenticated();
    }

    // Regeln für Einladungen zu Listen
    match /listInvites/{inviteId} {
      allow read, write: if isAuthenticated();
    }
  }
}